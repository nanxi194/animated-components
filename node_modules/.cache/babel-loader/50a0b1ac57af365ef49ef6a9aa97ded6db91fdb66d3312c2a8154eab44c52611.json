{"ast":null,"code":"var _jsxFileName = \"/Users/nanxi/Desktop/animated-components/src/components/Count.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport classes from \"./Count.module.css\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Count(props) {\n  _s();\n  const {\n    number,\n    duration\n  } = props;\n  const [count, setCount] = useState(\"0\");\n  useEffect(() => {\n    let start = 0;\n    // first three numbers from props\n    const end = parseInt(number.substring(0, 3));\n    // if zero, return\n    if (start === end) return;\n\n    // find duration per increment\n    let totalMilSecDur = parseInt(duration);\n    let incrementTime = totalMilSecDur / end * 1000;\n\n    // timer increments start counter\n    // then updates count\n    // ends if start reaches end\n    let timer = setInterval(() => {\n      start += 1;\n      setCount(String(start) + number.substring(3));\n      if (start === end) clearInterval(timer);\n    }, incrementTime);\n\n    // dependency array\n  }, [number, duration]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.count,\n    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(Count, \"e9WYKlY6D86hItDa7BwgUK75Iv8=\");\n_c = Count;\nexport default Count;\nvar _c;\n$RefreshReg$(_c, \"Count\");","map":{"version":3,"names":["React","classes","useState","useEffect","jsxDEV","_jsxDEV","Count","props","_s","number","duration","count","setCount","start","end","parseInt","substring","totalMilSecDur","incrementTime","timer","setInterval","String","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nanxi/Desktop/animated-components/src/components/Count.js"],"sourcesContent":["import React from \"react\";\nimport classes from \"./Count.module.css\";\nimport { useState, useEffect } from \"react\";\n\nfunction Count(props) {\n  const { number, duration } = props;\n  const [count, setCount] = useState(\"0\");\n\n  useEffect(() => {\n    let start = 0;\n    // first three numbers from props\n    const end = parseInt(number.substring(0, 3));\n    // if zero, return\n    if (start === end) return;\n\n    // find duration per increment\n    let totalMilSecDur = parseInt(duration);\n    let incrementTime = (totalMilSecDur / end) * 1000;\n\n    // timer increments start counter\n    // then updates count\n    // ends if start reaches end\n    let timer = setInterval(() => {\n      start += 1;\n      setCount(String(start) + number.substring(3));\n      if (start === end) clearInterval(timer);\n    }, incrementTime);\n\n    // dependency array\n  }, [number, duration]);\n\n  return (\n    <div className={classes.count}>\n      <h3>{count}</h3>\n    </div>\n  );\n}\n\nexport default Count;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,oBAAoB;AACxC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,KAAKA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACpB,MAAM;IAAEC,MAAM;IAAEC;EAAS,CAAC,GAAGH,KAAK;EAClC,MAAM,CAACI,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,GAAG,CAAC;EAEvCC,SAAS,CAAC,MAAM;IACd,IAAIU,KAAK,GAAG,CAAC;IACb;IACA,MAAMC,GAAG,GAAGC,QAAQ,CAACN,MAAM,CAACO,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC5C;IACA,IAAIH,KAAK,KAAKC,GAAG,EAAE;;IAEnB;IACA,IAAIG,cAAc,GAAGF,QAAQ,CAACL,QAAQ,CAAC;IACvC,IAAIQ,aAAa,GAAID,cAAc,GAAGH,GAAG,GAAI,IAAI;;IAEjD;IACA;IACA;IACA,IAAIK,KAAK,GAAGC,WAAW,CAAC,MAAM;MAC5BP,KAAK,IAAI,CAAC;MACVD,QAAQ,CAACS,MAAM,CAACR,KAAK,CAAC,GAAGJ,MAAM,CAACO,SAAS,CAAC,CAAC,CAAC,CAAC;MAC7C,IAAIH,KAAK,KAAKC,GAAG,EAAEQ,aAAa,CAACH,KAAK,CAAC;IACzC,CAAC,EAAED,aAAa,CAAC;;IAEjB;EACF,CAAC,EAAE,CAACT,MAAM,EAAEC,QAAQ,CAAC,CAAC;EAEtB,oBACEL,OAAA;IAAKkB,SAAS,EAAEtB,OAAO,CAACU,KAAM;IAAAa,QAAA,eAC5BnB,OAAA;MAAAmB,QAAA,EAAKb;IAAK;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEV;AAACpB,EAAA,CAhCQF,KAAK;AAAAuB,EAAA,GAALvB,KAAK;AAkCd,eAAeA,KAAK;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}